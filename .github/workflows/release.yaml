name: Release

on:
  release:
    types: [created]

jobs:
  build-and-release:
    if: startsWith(github.event.release.tag_name, 'v')
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [x86_64, i386, aarch64, arm, armv7, armv6l]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          
      - name: Cache cargo for ${{ matrix.arch }}
        uses: actions/cache@v2
        id: cache-cargo
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ matrix.arch }}-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ matrix.arch }}-${{ runner.os }}-

      - name: Install cross
        run: cargo install cross

      - name: Build with cross
        run: cross build --release --target ${{ matrix.arch }}-unknown-linux-gnu

      - name: Rename binary file
        run: mv target/${{ matrix.arch }}-unknown-linux-gnu/release/lpm{,${{ matrix.arch }}}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: lpm.${{ matrix.arch }}
          path: target/${{ matrix.arch }}-unknown-linux-gnu/release/lpm
